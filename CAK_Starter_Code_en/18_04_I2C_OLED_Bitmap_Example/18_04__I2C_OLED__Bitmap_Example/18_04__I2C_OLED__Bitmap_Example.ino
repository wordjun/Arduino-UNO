/**************************************************************************
This is an example for our Monochrome OLEDs based on SSD1306 drivers
Pick one up today in the adafruit shop!
------> http://www.adafruit.com/category/63_98
This example is for a 128x32 pixel display using I2C to communicate
3 pins are required to interface (two I2C and one reset).
Adafruit invests time and resources providing this open
This example is for a 128x32 pixel display using I2C to communicate
source code, please support Adafruit and open-source
hardware by purchasing products from Adafruit!
Written by Limor Fried/Ladyada for Adafruit Industries,
with contributions from the open source community.
BSD license, check license.txt for more information
All text above, and the splash screen below must be
included in any redistribution.
**************************************************************************/
#include <SPI.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>


#define SCREEN_WIDTH 128 // width, pixel size 
#define SCREEN_HEIGHT 64 // height, pixel size

#define OLED_RESET  -1 // Resetpin # (or -1 if you are connecting the aduino to the resetpin)
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);


// 'codingarray_logo', 128x64px
const unsigned char codingarray [] PROGMEM = {
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xfc, 0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xe0, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xc7, 0xff, 0xff, 0xff, 0xfe, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0x8f, 0xff, 0xff, 0xff, 0xff, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0x9f, 0xff, 0xff, 0xff, 0xff, 0x9f, 0xf8, 0x1f, 0xe0, 0x7e, 0x01, 0xf8, 0xc3, 0xf1, 0xf8, 0x1f, 
  0xbf, 0xff, 0xff, 0xff, 0xff, 0xdf, 0xf0, 0x07, 0x80, 0x1e, 0x00, 0xf8, 0xc3, 0xf1, 0xe0, 0x07, 
  0x3f, 0x00, 0x00, 0x00, 0x0f, 0xcf, 0xc0, 0x07, 0x00, 0x0e, 0x00, 0x78, 0xc1, 0xf1, 0xc0, 0x07, 
  0x3e, 0x00, 0x00, 0x00, 0x07, 0xcf, 0xc3, 0xee, 0x0f, 0x86, 0x3c, 0x38, 0xc1, 0xf1, 0x83, 0xef, 
  0x3c, 0x00, 0x00, 0x00, 0x07, 0xcf, 0x87, 0xfe, 0x3f, 0xc6, 0x3e, 0x18, 0xc0, 0xf1, 0x8f, 0xff, 
  0x3c, 0x00, 0x00, 0x00, 0x03, 0xcf, 0x8f, 0xfe, 0x3f, 0xc6, 0x3f, 0x18, 0xc0, 0x71, 0x8f, 0xff, 
  0x3c, 0x00, 0x00, 0x00, 0x03, 0xcf, 0x8f, 0xfc, 0x7f, 0xe2, 0x3f, 0x18, 0xc4, 0x71, 0x1f, 0xff, 
  0x3c, 0x00, 0x00, 0x00, 0x03, 0xcf, 0x9f, 0xfc, 0x7f, 0xe2, 0x3f, 0x98, 0xc4, 0x31, 0x1f, 0x7f, 
  0x3c, 0x00, 0x00, 0x00, 0x03, 0xcf, 0x8f, 0xfc, 0x7f, 0xe2, 0x3f, 0x18, 0xc6, 0x31, 0x1f, 0x00, 
  0x3c, 0x00, 0x00, 0x01, 0x83, 0xcf, 0x8f, 0xfe, 0x3f, 0xc2, 0x3f, 0x18, 0xc7, 0x11, 0x8f, 0x00, 
  0x3c, 0x07, 0xf8, 0x03, 0xc3, 0xcf, 0x8f, 0xfe, 0x3f, 0xc6, 0x3f, 0x18, 0xc7, 0x01, 0x8f, 0xf1, 
  0x3c, 0x0f, 0xfe, 0x07, 0xe3, 0xcf, 0xc7, 0xee, 0x1f, 0x86, 0x3e, 0x38, 0xc7, 0x81, 0x87, 0xe1, 
  0x3c, 0x1f, 0xfe, 0x0f, 0xe3, 0xcf, 0xc1, 0x87, 0x06, 0x0e, 0x18, 0x38, 0xc7, 0x81, 0xc1, 0x83, 
  0x3c, 0x3f, 0xfc, 0x1f, 0xe3, 0xcf, 0xe0, 0x07, 0x80, 0x1e, 0x00, 0x78, 0xc7, 0xc1, 0xe0, 0x07, 
  0x3c, 0x3f, 0xf8, 0x3f, 0xe3, 0xcf, 0xf8, 0x0f, 0xc0, 0x3e, 0x01, 0xf8, 0xc7, 0xe1, 0xf0, 0x0f, 
  0x3c, 0x7e, 0x00, 0x7f, 0xe3, 0xcf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0x38, 0x7c, 0x00, 0xff, 0xe1, 0xcf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0x00, 0x7c, 0x01, 0xff, 0xe0, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0x00, 0x7c, 0x03, 0xfb, 0xe0, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0x38, 0x7c, 0x07, 0xf7, 0xe1, 0xcf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0x3c, 0x7e, 0x0f, 0xe7, 0xe3, 0xcf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0x3c, 0x7f, 0xbf, 0xc7, 0xe3, 0xcf, 0xfc, 0x3f, 0x00, 0xf0, 0x1f, 0xf1, 0xf8, 0xf1, 0xff, 0xff, 
  0x3c, 0x3f, 0xff, 0x87, 0xe3, 0xcf, 0xfc, 0x3f, 0x00, 0x70, 0x0f, 0xe0, 0xf8, 0x61, 0xff, 0xff, 
  0x3c, 0x1f, 0xff, 0x07, 0xe3, 0xcf, 0xf8, 0x3f, 0x00, 0x70, 0x0f, 0xe0, 0xfc, 0x63, 0xff, 0xff, 
  0x3c, 0x0f, 0xfe, 0x07, 0xe3, 0xcf, 0xf8, 0x1f, 0x1c, 0x73, 0xc7, 0xe0, 0xfc, 0x03, 0xff, 0xff, 
  0x3c, 0x07, 0xfc, 0x07, 0xe3, 0xcf, 0xf0, 0x1f, 0x1e, 0x33, 0xc7, 0xc0, 0x7e, 0x07, 0xff, 0xff, 
  0x3c, 0x00, 0xe0, 0x03, 0xc3, 0xcf, 0xf1, 0x1f, 0x1c, 0x73, 0x87, 0xc4, 0x7e, 0x07, 0xff, 0xff, 
  0x3c, 0x00, 0x00, 0x00, 0x03, 0xcf, 0xf1, 0x8f, 0x00, 0x70, 0x0f, 0x84, 0x3f, 0x0f, 0xff, 0xff, 
  0x3c, 0x00, 0x00, 0x00, 0x03, 0xcf, 0xe1, 0x8f, 0x00, 0xf0, 0x1f, 0x8e, 0x3f, 0x0f, 0xff, 0xff, 
  0x3c, 0x00, 0x00, 0x00, 0x03, 0xcf, 0xe0, 0x07, 0x01, 0xf0, 0x3f, 0x80, 0x3f, 0x9f, 0xff, 0xff, 
  0x3c, 0x00, 0x00, 0x00, 0x03, 0xcf, 0xe0, 0x07, 0x10, 0xf3, 0x1f, 0x00, 0x1f, 0x9f, 0xff, 0xff, 
  0x3c, 0x00, 0x00, 0x00, 0x07, 0xcf, 0xc0, 0x07, 0x18, 0xf3, 0x1f, 0x00, 0x1f, 0x9f, 0xff, 0xff, 
  0x3e, 0x00, 0x00, 0x00, 0x07, 0xcf, 0xc7, 0xe3, 0x18, 0xf3, 0x0f, 0x1f, 0x1f, 0x9f, 0xff, 0xff, 
  0x3f, 0x00, 0x00, 0x00, 0x0f, 0xcf, 0xc7, 0xe3, 0x1c, 0x73, 0x8e, 0x3f, 0x8f, 0x9f, 0xff, 0xff, 
  0xbf, 0xff, 0xff, 0xff, 0xff, 0xdf, 0x8f, 0xe3, 0x1c, 0x73, 0x8e, 0x3f, 0x8f, 0x9f, 0xff, 0xff, 
  0x9f, 0xff, 0xff, 0xff, 0xff, 0x9f, 0x8f, 0xf1, 0x1e, 0x33, 0xc6, 0x3f, 0x8f, 0x1f, 0xff, 0xff, 
  0x8f, 0xff, 0xff, 0xff, 0xff, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xc7, 0xff, 0xff, 0xff, 0xfe, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xe0, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xfc, 0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};



void setup() {
  Serial.begin(9600); // Enable serial monitor for debugging message output
  // SSD1306_SWITCHCAPVCC = Leave the internal 3.3 volt charge pump circuit on.
  // Specify OLED Address 0x3C
    if(!display.begin(SSD1306_SWITCHCAPVCC, 0x3C)) {   
      Serial.println(F("SSD1306 Not Connected"));
      for(;;);    // If SSD1306 is not addressed, infinite loop
  }

  // Clear Buffer
  display.clearDisplay();

  // Bitmap Image Output
  display.drawBitmap(0, 0, codingarray, 128, 64, WHITE);
  display.display();

  // inverted image
  // display.invertDisplay(1);
}

void loop() {}
